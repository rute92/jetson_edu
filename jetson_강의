교육자료 : https://cafe.naver.com/e2gedu

Jetson Tx2 제어 -> linux 는 sysfs 로서,

J21핀 sysfs 번호
J21.7 - gpio396
J21.11 - gpio466

* sysfs GPIO 제어 -> /sys/class/gpio 내에 export를 통해 제어

ex) 
J21.29 -> gpio398

$ echo 398 > /sys/class/gpio/export 	// 398번 gpio sysfs 생성(/sys/class/gpio/gpio398 생성)
$ echo 1 > /sys/class/gpio/gpio398/direction 	// 398 출력으로 설정
$ echo 1 > /sys/class/gpio/gpio398/value 	// 398 출력 1로 설정

* serial통신을 통한 모터 제어
TX2 <------> STM32 <-------> Motor driver <-----> 모터
    (serial)
	
TX2 보드에서 serial 통신을 위한 Pin 
J17.1 : GRD,
J17.4 : RX, 
J17.5 : TX

serial 통신을 위한 driver - /dev/ttyTHS2 
(dmesg | grep tty 를 통해 부팅 시 tty 어딘지 확인)

카페에 소스 있음.

* I2C 를 통한 IMU (MPU6050) (자이로, 가속도 센서), 레이저센서 (VL53L0X) 값 읽기
TX2 <-----> MPU6050
     (I2C)  (0x68)
	 
i2c 패키지 설치
$ sudo apt-get install libi2c-dev i2c-tools -y
$ sudo i2cdetect -y -r 1
을 하면 i2cdetect 라는게 실행되는거고 연결된 i2c들의 id를 불러옴. MPU6050센서 경우 68번.

카페에서 MPU6050_ex.py 파일 받음.
-> sudo apt-get install python3-smbus 패키지 받아야함. (i2c 관련 모듈)
$ python3 MPU6050_ex.py
로 실행하면 가속도, 자이로 값 읽어옴.

qt로 3d환경에서 볼 수 있음.
qt 설치
$ sudo apt-get install qt5-default qt5-creator -y

$ git clone https://github.com/jetsonhacks/RTIMULib.git
로 소스코드 다운

$ sudo qtcreator
로 실행.
다운받은경로/RTIMULib/Linux/RTIMULibDemoGL 내에 있는 pro 파일을 열기

Setup
1.Tools->Options->Build & Run->Compilers
add gcc
path: /usr/bin/gcc
ABI: custom – arm – linux – generic – elf – 64 bit
2.Tools->Options->Build & Run->Kit
Add, and change the name “JetsonTX2”

위 과정으로 프로젝트 컨피그 해서 JetsonTX2 로 열기
빌드 및 실행하면 3d로 가속도, 자이로 값 보임


TX2 <------> VL53L0X
      (I2C)   (0x29)
	  
소스코드 다운
$ git clone https://github.com/jetsonhacks/JHVL53L0X.git
$ cd JHVL53L0X
내에 example.cpp 를 make하여 실행하면 되는데
ubuntu18.04 부터인지 관련 이슈가 있음.

i2c 라이브러리를 불러오지못함.
JHVL53L0X/src/VL53L0X.cpp 파일 내 
(1) LINE 52 (수정): kI2CBus(0) → kI2CBus(1) 
// 사용하는 i2c 버스 숫자 써야함. Jetson의 경우 J21.3, 5가 bus1, J21.27, 28이 bus0
(2) LINE 18 (삽입): extern "C" {
             #include <i2c/smbus.h>
         }
JHVL53L0X/example/Makefile 파일 내
(1) LINE 1 (추가): g++ example.cpp ../src/VL53L0X.cpp -I../src -o example
→ g++ example.cpp ../src/VL53L0X.cpp -I../src -o example -li2c
// i2c 라이브러리 추가하는걸 명시해줘야함. -l 옵션으로 i2c 라이브러리 추가

위 변경하여 make 후 실행하면 잘됨.

qt로 실행 시 
$ sudo qtqreator
후 JHVL53L0X/example/LidarPlotExample 에서 pro파일 실행
위에 했던 소스수정이랑 똑같이 수정해주고 qt 프로젝트 내 pro파일에
QT += printsupport
LIBS += -li2c
추가 후 실행

* 와이파이 접속을 통한 모터 제어
핸드폰 <-------> TX2 <-------> STM32 <-------> MotorDriver <-----> Motor
       (TCP)        (serial)         

우선 핸드폰에 apk 설치. (카페 내 임베디드AI 에 675번 글에서 다운)

jetson에 apk 소스 및 구동 소스 설치
(카페 내 임베디드AI 에 620번 글에서 소스 다운)

root 권한으로 소스 컴파일 및 실행
(rover5_tcp.c 가 안되면 게시글 665번의 rover5_tcp.c 를 받아 실행)

핸드폰에서 와이파이 접속 후 어플 실행. TX2 의 ip를 입력 후 connect

정상 connect 되었으면 tx2 화면에 connect 됐다는 메세지 뜸. 그 후 어플로 조작하면 됨.
